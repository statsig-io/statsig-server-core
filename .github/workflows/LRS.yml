name: Long Running SDK CD

on: 
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
      
env:
  api_key: ${{ secrets.LRS_SERVER_KEY }}
  sdk_repo: private-statsig-server-core

jobs:
  CD:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        args:
            # - ["image_tag", "lrs_subdir"]
            - ["server_core_node", "server-core-node"]
            - ["grpc_server_core_python", "server-core-python"]
            - ["server-core-java", "server-core-java"]
            - ["server_core_rust", "server-core-rust"]
            - ["server_core_python_klaviyo", "server-core-python-klaviyo"]
    steps:
      - name: Checkout LRS repo
        uses: actions/checkout@v3
        with:
          repository: statsig-io/long-running-sdk
          ref: main
          token: ${{ secrets.ROIM }}

      - name: Checkout SDK repo
        uses: actions/checkout@v3
        with:
          repository: statsig-io/${{  env.sdk_repo  }}
          ref: main
          token: ${{ secrets.ROIM }}
          path: ./${{ matrix.args[1] }}/${{  env.sdk_repo  }}
      
      - uses: pnpm/action-setup@v4
        with:
          version: 7.32.4

      - name: Build SDK
        if: ${{ matrix.args[0] == 'server-core-java' }}
        run:
          cd ${{matrix.args[1]}}/${{ env.sdk_repo }} && pnpm install --dir cli && ./tore build java --os debian --arch amd64

      - name: Initialize and update submodules recursively
        run: cd ${{matrix.args[1]}}/${{ env.sdk_repo }} && git submodule update --init --recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: statsig
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.args[1] }}/Dockerfile
          push: true
          tags: statsig/long-running-sdk:${{ matrix.args[0] }}
          github-token: ${{ secrets.GH_CI_CD_PAT }}
          build-args: 
            secret_key=${{env.api_key}}
          platforms: linux/amd64
            
          
