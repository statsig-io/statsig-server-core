name: Update RC Versions within Statsig Repo

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  update-node-core-rc-version:
    timeout-minutes: 40
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'release' && contains(github.event.release.tag_name, '-rc.'))
    runs-on: ubuntu-latest
    steps:
      - name: Resolve RC version from release event
        id: rc_ver
        shell: bash
        run: |
          TAG="${{ github.event.release.tag_name }}"
          VER="${TAG#v}"
          echo "version=$VER" >> "$GITHUB_OUTPUT"
          echo "Resolved RC version: $VER"

      - name: Verify / Wait for RC version exists on npm
        env:
          PKG: "@statsig/statsig-node-core"
          VER: ${{ steps.rc_ver.outputs.version }}
          INTERVAL_SEC: "30"   # polling interval (seconds)
          TIMEOUT_MIN: "30"
        shell: bash
        run: |
          set -euo pipefail

          if [[ "$VER" != *"-rc."* ]]; then
            echo "::error::Version $VER is not an RC (missing '-rc.'). Aborting."
            exit 1
          fi

          echo "Waiting for ${PKG}@${VER} to appear on npm..."
          deadline=$(( $(date +%s) + TIMEOUT_MIN*60 ))
          while true; do
            if npm view "${PKG}@${VER}" version --json >/dev/null 2>&1; then
              echo "[SUCCESS] Found ${PKG}@${VER} on npm"
              break
            fi
            now=$(date +%s)
            if [ "$now" -ge "$deadline" ]; then
              echo "::error::Timed out after ${TIMEOUT_MIN} minutes waiting for ${PKG}@${VER} on npm."
              exit 1
            fi
            echo "â€¦not yet, sleeping ${INTERVAL_SEC}s"
            sleep "${INTERVAL_SEC}"
          done

      - name: Checkout Statsig Repo
        uses: actions/checkout@v4
        with:
          repository: statsig-io/statsig
          ref: main
          token: ${{ secrets.ROIM }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Bump RC Version
        shell: bash
        run: |
          set -euo pipefail
          pkgs="@statsig/statsig-node-core-rc \
          @statsig/statsig-node-core-linux-x64-gnu-rc \
          @statsig/statsig-node-core-linux-x64-musl-rc"
          echo "Updating to latest rc for: $pkgs"

          cd lib
          pnpm update @statsig/statsig-node-core-rc @statsig/statsig-node-core-linux-x64-gnu-rc @statsig/statsig-node-core-linux-x64-musl-rc --no-save --force --include=optional
          cd node/service-core
          pnpm update @statsig/statsig-node-core-rc @statsig/statsig-node-core-linux-x64-gnu-rc @statsig/statsig-node-core-linux-x64-musl-rc --no-save --force --include=optional

          echo "Changed files:"
          git status --porcelain

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.ROIM }}
          commit-message: "Automator: [automated][sdk] Bump Statsig Node Core RC deps"
          title: "[automated][sdk] Bump Statsig Node Core RC deps"
          body: |
            This PR was auto-generated on RC release.
            - Updated in `lib` and `lib/node/service-core`
            - Packages:
              - @statsig/statsig-node-core-rc
              - @statsig/statsig-node-core-linux-x64-gnu-rc
              - @statsig/statsig-node-core-linux-x64-musl-rc
          branch: bump_statsig_rc_sdk_version-${{ github.run_id }}
          delete-branch: true
          labels: automation, rc-bump
          team-reviewers: sdk
